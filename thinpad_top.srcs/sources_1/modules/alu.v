`timescale 1ns / 1ps

module alu( 
    input wire[3:0] op,
    input wire[31:0] A,
    input wire[31:0] B,
    output reg[31:0] res,
    output reg C, S, Z, V
);

parameter ALU_OP_ADD = 4'h0;
parameter ALU_OP_SUB = 4'h1;
parameter ALU_OP_AND = 4'h2;
parameter ALU_OP_OR  = 4'h3;
parameter ALU_OP_XOR = 4'h4;
parameter ALU_OP_NOT = 4'h5;
parameter ALU_OP_SLL = 4'h6;
parameter ALU_OP_SRL = 4'h7;
parameter ALU_OP_SRA = 4'h8;
parameter ALU_OP_ROL = 4'h9;
parameter ALU_OP_LUI = 4'ha;
parameter ALU_OP_CLZ = 4'hb;

always @(op or A or B) begin
    case (op)
        ALU_OP_ADD: {C, res} = {1'b0, A} + {1'b0, B};
        ALU_OP_SUB: {C, res} = {1'b0, A} - {1'b1, B};
        ALU_OP_AND: res = A & B;
        ALU_OP_OR:  res = A | B;
        ALU_OP_XOR: res = A ^ B;
        ALU_OP_NOT: res = ~A;
        ALU_OP_SLL: res = B << A;
        ALU_OP_SRL: res = B >> A;
        ALU_OP_SRA: res = ($signed(A)) >>> B;
        ALU_OP_ROL: res = (A << B) | (A >> (32'h00000020 - B));
        ALU_OP_LUI: res = B << 16;
        ALU_OP_CLZ: res = (A[31] & 6'b000000) | 
            (~A[31] & A[30] & 6'b000001) | 
            (~A[31] & ~A[30] & A[29] & 6'b000010) | 
            (~A[31] & ~A[30] & ~A[29] & A[28] & 6'b000011) | 
            (~A[31] & ~A[30] & ~A[29] & ~A[28] & A[27] & 6'b000100) | 
            (~A[31] & ~A[30] & ~A[29] & ~A[28] & ~A[27] & A[26] & 6'b000101) | 
            (~A[31] & ~A[30] & ~A[29] & ~A[28] & ~A[27] & ~A[26] & A[25] & 6'b000110) | 
            (~A[31] & ~A[30] & ~A[29] & ~A[28] & ~A[27] & ~A[26] & ~A[25] & A[24] & 6'b000111) | 
            (~A[31] & ~A[30] & ~A[29] & ~A[28] & ~A[27] & ~A[26] & ~A[25] & ~A[24] & A[23] & 6'b001000) | 
            (~A[31] & ~A[30] & ~A[29] & ~A[28] & ~A[27] & ~A[26] & ~A[25] & ~A[24] & ~A[23] & A[22] & 6'b001001) | 
            (~A[31] & ~A[30] & ~A[29] & ~A[28] & ~A[27] & ~A[26] & ~A[25] & ~A[24] & ~A[23] & ~A[22] & A[21] & 6'b001010) | 
            (~A[31] & ~A[30] & ~A[29] & ~A[28] & ~A[27] & ~A[26] & ~A[25] & ~A[24] & ~A[23] & ~A[22] & ~A[21] & A[20] & 6'b001011) | 
            (~A[31] & ~A[30] & ~A[29] & ~A[28] & ~A[27] & ~A[26] & ~A[25] & ~A[24] & ~A[23] & ~A[22] & ~A[21] & ~A[20] & A[19] & 6'b001100) | 
            (~A[31] & ~A[30] & ~A[29] & ~A[28] & ~A[27] & ~A[26] & ~A[25] & ~A[24] & ~A[23] & ~A[22] & ~A[21] & ~A[20] & ~A[19] & A[18] & 6'b001101) | 
            (~A[31] & ~A[30] & ~A[29] & ~A[28] & ~A[27] & ~A[26] & ~A[25] & ~A[24] & ~A[23] & ~A[22] & ~A[21] & ~A[20] & ~A[19] & ~A[18] & A[17] & 6'b001110) | 
            (~A[31] & ~A[30] & ~A[29] & ~A[28] & ~A[27] & ~A[26] & ~A[25] & ~A[24] & ~A[23] & ~A[22] & ~A[21] & ~A[20] & ~A[19] & ~A[18] & ~A[17] & A[16] & 6'b001111) | 
            (~A[31] & ~A[30] & ~A[29] & ~A[28] & ~A[27] & ~A[26] & ~A[25] & ~A[24] & ~A[23] & ~A[22] & ~A[21] & ~A[20] & ~A[19] & ~A[18] & ~A[17] & ~A[16] & A[15] & 6'b010000) | 
            (~A[31] & ~A[30] & ~A[29] & ~A[28] & ~A[27] & ~A[26] & ~A[25] & ~A[24] & ~A[23] & ~A[22] & ~A[21] & ~A[20] & ~A[19] & ~A[18] & ~A[17] & ~A[16] & ~A[15] & A[14] & 6'b010001) | 
            (~A[31] & ~A[30] & ~A[29] & ~A[28] & ~A[27] & ~A[26] & ~A[25] & ~A[24] & ~A[23] & ~A[22] & ~A[21] & ~A[20] & ~A[19] & ~A[18] & ~A[17] & ~A[16] & ~A[15] & ~A[14] & A[13] & 6'b010010) | 
            (~A[31] & ~A[30] & ~A[29] & ~A[28] & ~A[27] & ~A[26] & ~A[25] & ~A[24] & ~A[23] & ~A[22] & ~A[21] & ~A[20] & ~A[19] & ~A[18] & ~A[17] & ~A[16] & ~A[15] & ~A[14] & ~A[13] & A[12] & 6'b010011) | 
            (~A[31] & ~A[30] & ~A[29] & ~A[28] & ~A[27] & ~A[26] & ~A[25] & ~A[24] & ~A[23] & ~A[22] & ~A[21] & ~A[20] & ~A[19] & ~A[18] & ~A[17] & ~A[16] & ~A[15] & ~A[14] & ~A[13] & ~A[12] & A[11] & 6'b010100) | 
            (~A[31] & ~A[30] & ~A[29] & ~A[28] & ~A[27] & ~A[26] & ~A[25] & ~A[24] & ~A[23] & ~A[22] & ~A[21] & ~A[20] & ~A[19] & ~A[18] & ~A[17] & ~A[16] & ~A[15] & ~A[14] & ~A[13] & ~A[12] & ~A[11] & A[10] & 6'b010101) | 
            (~A[31] & ~A[30] & ~A[29] & ~A[28] & ~A[27] & ~A[26] & ~A[25] & ~A[24] & ~A[23] & ~A[22] & ~A[21] & ~A[20] & ~A[19] & ~A[18] & ~A[17] & ~A[16] & ~A[15] & ~A[14] & ~A[13] & ~A[12] & ~A[11] & ~A[10] & A[9] & 6'b010110) | 
            (~A[31] & ~A[30] & ~A[29] & ~A[28] & ~A[27] & ~A[26] & ~A[25] & ~A[24] & ~A[23] & ~A[22] & ~A[21] & ~A[20] & ~A[19] & ~A[18] & ~A[17] & ~A[16] & ~A[15] & ~A[14] & ~A[13] & ~A[12] & ~A[11] & ~A[10] & ~A[9] & A[8] & 6'b010111) | 
            (~A[31] & ~A[30] & ~A[29] & ~A[28] & ~A[27] & ~A[26] & ~A[25] & ~A[24] & ~A[23] & ~A[22] & ~A[21] & ~A[20] & ~A[19] & ~A[18] & ~A[17] & ~A[16] & ~A[15] & ~A[14] & ~A[13] & ~A[12] & ~A[11] & ~A[10] & ~A[9] & ~A[8] & A[7] & 6'b011000) | 
            (~A[31] & ~A[30] & ~A[29] & ~A[28] & ~A[27] & ~A[26] & ~A[25] & ~A[24] & ~A[23] & ~A[22] & ~A[21] & ~A[20] & ~A[19] & ~A[18] & ~A[17] & ~A[16] & ~A[15] & ~A[14] & ~A[13] & ~A[12] & ~A[11] & ~A[10] & ~A[9] & ~A[8] & ~A[7] & A[6] & 6'b011001) | 
            (~A[31] & ~A[30] & ~A[29] & ~A[28] & ~A[27] & ~A[26] & ~A[25] & ~A[24] & ~A[23] & ~A[22] & ~A[21] & ~A[20] & ~A[19] & ~A[18] & ~A[17] & ~A[16] & ~A[15] & ~A[14] & ~A[13] & ~A[12] & ~A[11] & ~A[10] & ~A[9] & ~A[8] & ~A[7] & ~A[6] & A[5] & 6'b011010) | 
            (~A[31] & ~A[30] & ~A[29] & ~A[28] & ~A[27] & ~A[26] & ~A[25] & ~A[24] & ~A[23] & ~A[22] & ~A[21] & ~A[20] & ~A[19] & ~A[18] & ~A[17] & ~A[16] & ~A[15] & ~A[14] & ~A[13] & ~A[12] & ~A[11] & ~A[10] & ~A[9] & ~A[8] & ~A[7] & ~A[6] & ~A[5] & A[4] & 6'b011011) | 
            (~A[31] & ~A[30] & ~A[29] & ~A[28] & ~A[27] & ~A[26] & ~A[25] & ~A[24] & ~A[23] & ~A[22] & ~A[21] & ~A[20] & ~A[19] & ~A[18] & ~A[17] & ~A[16] & ~A[15] & ~A[14] & ~A[13] & ~A[12] & ~A[11] & ~A[10] & ~A[9] & ~A[8] & ~A[7] & ~A[6] & ~A[5] & ~A[4] & A[3] & 6'b011100) | 
            (~A[31] & ~A[30] & ~A[29] & ~A[28] & ~A[27] & ~A[26] & ~A[25] & ~A[24] & ~A[23] & ~A[22] & ~A[21] & ~A[20] & ~A[19] & ~A[18] & ~A[17] & ~A[16] & ~A[15] & ~A[14] & ~A[13] & ~A[12] & ~A[11] & ~A[10] & ~A[9] & ~A[8] & ~A[7] & ~A[6] & ~A[5] & ~A[4] & ~A[3] & A[2] & 6'b011101) | 
            (~A[31] & ~A[30] & ~A[29] & ~A[28] & ~A[27] & ~A[26] & ~A[25] & ~A[24] & ~A[23] & ~A[22] & ~A[21] & ~A[20] & ~A[19] & ~A[18] & ~A[17] & ~A[16] & ~A[15] & ~A[14] & ~A[13] & ~A[12] & ~A[11] & ~A[10] & ~A[9] & ~A[8] & ~A[7] & ~A[6] & ~A[5] & ~A[4] & ~A[3] & ~A[2] & A[1] & 6'b011110) | 
            (~A[31] & ~A[30] & ~A[29] & ~A[28] & ~A[27] & ~A[26] & ~A[25] & ~A[24] & ~A[23] & ~A[22] & ~A[21] & ~A[20] & ~A[19] & ~A[18] & ~A[17] & ~A[16] & ~A[15] & ~A[14] & ~A[13] & ~A[12] & ~A[11] & ~A[10] & ~A[9] & ~A[8] & ~A[7] & ~A[6] & ~A[5] & ~A[4] & ~A[3] & ~A[2] & ~A[1] & A[0] & 6'b011111) | 
            (~A[31] & ~A[30] & ~A[29] & ~A[28] & ~A[27] & ~A[26] & ~A[25] & ~A[24] & ~A[23] & ~A[22] & ~A[21] & ~A[20] & ~A[19] & ~A[18] & ~A[17] & ~A[16] & ~A[15] & ~A[14] & ~A[13] & ~A[12] & ~A[11] & ~A[10] & ~A[9] & ~A[8] & ~A[7] & ~A[6] & ~A[5] & ~A[4] & ~A[3] & ~A[2] & ~A[1] & ~A[0] & 6'b100000);
    endcase
    S <= res[31];
    Z <= res == 32'h00000000;
    if (op == ALU_OP_ADD)
        V <= (A[31] & B[31] & ~res[31]) | (~A[31] & ~B[31] & res[31]);
    else if (op == ALU_OP_SUB) 
        V <= (A[31] & ~B[31] & ~res[31]) | (~A[31] & B[31] & res[31]);
    else begin
        C <= 32'h00000000;
        V <= 32'h00000000;
    end
end

endmodule
